string : str = "action(train(0),move_forward,8) action(train(0),move_forward,9) action(train(1),move_forward,2) action(train(1),move_forward,3) action(train(2),move_forward,4) action(train(2),move_forward,5) action(train(3),move_forward,4) action(train(3),move_forward,5) action(train(0),move_forward,7) action(train(1),move_forward,1) action(train(2),move_forward,3) action(train(3),move_forward,3) action(train(0),wait,6) action(train(1),wait,0) action(train(2),wait,2) action(train(3),wait,2) move(1,(9,33),(10,34),2,4,e) move(2,(9,33),(10,34),4,6,e) move(0,(13,20),(14,19),8,10,w) move(3,(13,20),(14,19),4,6,w) move(1,(10,34),(10,35),4,5,s) move(2,(10,34),(10,35),6,7,s) move(0,(14,19),(14,18),10,11,s) move(3,(14,19),(14,18),6,7,s) move(1,(10,35),(11,35),5,6,e) move(2,(10,35),(10,36),7,8,e) move(0,(14,18),(14,17),11,12,w) move(3,(14,18),(14,17),7,8,w) move(1,(11,35),(11,36),6,7,s) move(2,(10,36),(11,38),8,11,e) move(0,(14,17),(14,15),12,14,w) move(3,(14,17),(14,15),8,10,w) move(1,(11,36),(11,38),7,9,e) move(2,(11,38),(15,25),11,28,s) move(0,(14,15),(9,25),14,29,w) move(3,(14,15),(9,25),10,25,w) move(1,(15,25),(14,25),26,27,w) move(1,(11,38),(15,25),9,26,e) move(2,(15,25),(14,25),28,29,w) move(0,(9,25),(10,26),29,31,e) move(3,(9,25),(10,26),25,27,e) move(1,(14,25),(13,25),27,28,n) move(2,(14,25),(13,25),29,30,n) move(0,(10,26),(10,28),31,33,e) move(3,(10,26),(10,28),27,29,e) move(1,(13,25),(12,25),28,29,n) move(2,(13,25),(12,25),30,31,n) move(0,(10,28),(10,30),33,35,e) move(3,(10,28),(10,30),29,31,e) move(1,(12,25),(11,26),29,32,n) move(2,(12,25),(11,26),31,34,n) move(0,(10,30),(10,31),35,36,e) move(3,(10,30),(11,30),31,32,e) move(1,(11,26),(10,26),32,33,n) move(2,(11,26),(10,26),34,35,n) move(0,(10,31),(10,32),36,37,e) move(3,(11,30),(11,31),32,33,s) move(1,(10,26),(10,28),33,35,n) move(2,(10,26),(10,28),35,37,n) move(0,(10,32),(10,33),37,38,e) move(3,(11,31),(11,32),33,34,e) move(1,(10,28),(11,28),35,36,e) move(2,(10,28),(11,28),37,38,e) move(3,(11,32),(12,33),34,36,e) move(1,(11,28),(14,25),36,42,s) move(2,(11,28),(14,25),38,44,s) move(1,(14,25),(14,23),42,44,w) move(2,(14,25),(14,23),44,46,w) move(1,(14,23),(14,22),44,45,w) move(2,(14,23),(15,23),46,47,w) move(1,(14,22),(14,21),45,46,w) move(2,(15,23),(15,22),47,48,s) move(1,(14,21),(14,20),46,47,w) move(2,(15,22),(15,21),48,49,w) move(2,(15,21),(16,20),49,51,w) action(train(1),move_forward,7) action(train(1),move_forward,8) action(train(2),move_forward,9) action(train(2),move_forward,10) action(train(0),move_forward,13) action(train(3),move_forward,9) action(train(1),move_forward,10) action(train(1),move_forward,11) action(train(1),move_forward,12) action(train(1),move_forward,13) action(train(1),move_forward,14) action(train(1),move_forward,15) action(train(1),move_forward,16) action(train(1),move_forward,17) action(train(1),move_forward,18) action(train(1),move_forward,19) action(train(1),move_forward,20) action(train(1),move_forward,21) action(train(1),move_forward,22) action(train(1),move_forward,23) action(train(1),move_forward,24) action(train(1),move_forward,25) action(train(2),move_forward,12) action(train(2),move_forward,13) action(train(2),move_forward,14) action(train(2),move_forward,15) action(train(2),move_forward,16) action(train(2),move_forward,17) action(train(2),move_forward,18) action(train(2),move_forward,19) action(train(2),move_forward,20) action(train(2),move_forward,21) action(train(2),move_forward,22) action(train(2),move_forward,23) action(train(2),move_forward,24) action(train(2),move_forward,25) action(train(2),move_forward,26) action(train(2),move_forward,27) action(train(0),move_forward,14) action(train(0),move_forward,15) action(train(0),move_forward,16) action(train(0),move_forward,17) action(train(0),move_forward,18) action(train(0),move_forward,19) action(train(0),move_forward,20) action(train(0),move_forward,21) action(train(0),move_forward,22) action(train(0),move_forward,23) action(train(0),move_forward,24) action(train(0),move_forward,25) action(train(0),move_forward,26) action(train(0),move_forward,27) action(train(0),move_forward,28) action(train(3),move_forward,10) action(train(3),move_forward,11) action(train(3),move_forward,12) action(train(3),move_forward,13) action(train(3),move_forward,14) action(train(3),move_forward,15) action(train(3),move_forward,16) action(train(3),move_forward,17) action(train(3),move_forward,18) action(train(3),move_forward,19) action(train(3),move_forward,20) action(train(3),move_forward,21) action(train(3),move_forward,22) action(train(3),move_forward,23) action(train(3),move_forward,24) action(train(1),move_forward,9) action(train(2),move_forward,11) action(train(0),move_forward,30) action(train(0),move_forward,31) action(train(0),move_forward,32) action(train(3),move_forward,26) action(train(3),move_forward,27) action(train(3),move_forward,28) action(train(1),move_forward,28) action(train(1),move_forward,29) action(train(1),move_forward,30) action(train(1),move_forward,31) action(train(1),move_forward,32) action(train(1),move_forward,26) action(train(1),move_forward,27) action(train(2),move_forward,30) action(train(2),move_forward,31) action(train(2),move_forward,32) action(train(2),move_forward,33) action(train(2),move_forward,34) action(train(2),move_forward,28) action(train(2),move_forward,29) action(train(0),move_forward,33) action(train(0),move_forward,34) action(train(3),move_forward,29) action(train(3),move_forward,30) action(train(1),move_forward,34) action(train(2),move_forward,36) action(train(0),move_forward,35) action(train(0),move_forward,36) action(train(0),move_forward,37) action(train(3),move_forward,32) action(train(3),move_forward,33) action(train(3),move_forward,35) action(train(1),move_forward,35) action(train(1),move_forward,36) action(train(1),move_forward,37) action(train(1),move_forward,33) action(train(2),move_forward,37) action(train(2),move_forward,38) action(train(2),move_forward,39) action(train(2),move_forward,35) action(train(1),move_forward,39) action(train(1),move_forward,40) action(train(1),move_forward,41) action(train(1),move_forward,42) action(train(1),move_forward,43) action(train(1),move_forward,44) action(train(1),move_forward,45) action(train(1),move_forward,46) action(train(2),move_forward,41) action(train(2),move_forward,42) action(train(2),move_forward,43) action(train(2),move_forward,44) action(train(2),move_forward,45) action(train(2),move_forward,47) action(train(2),move_forward,48) action(train(2),move_forward,50) action(train(1),move_forward,38) action(train(2),move_forward,40) action(train(2),move_forward,8) action(train(2),move_forward,7) test(1,move_right,32,(12,25),(11,26)) action(train(1),move_right,35) action(train(2),move_right,37) action(train(1),move_right,29) action(train(2),move_right,31) action(train(0),move_right,29) action(train(3),move_right,25) action(train(3),move_right,34) action(train(2),move_left,46) action(train(2),move_left,49) test(1,move_forward,32,(12,25),(11,26)) action(train(1),move_forward,6) action(train(0),move_forward,12) action(train(3),move_forward,8) action(train(0),move_forward,10) action(train(3),move_forward,6) action(train(3),move_right,31) action(train(1),move_right,5) action(train(1),move_forward,4) action(train(2),move_forward,6) action(train(0),move_forward,11) action(train(3),move_forward,7)"
action_string: list[str] = string.split(" ")

values_list: list = []
for a_s in action_string: 
    # values: list[str] = a_s.split("(")[1].split(",")
    if "action(" in a_s:
        values: list[str] = a_s.split(",")
        values_list.append(values)

print("printing duplicates")
for values1 in values_list:
    for values2 in values_list:
        if values1[0]==values2[0] and values1[2]==values2[2] and values1[1]!=values2[1]:
            print(f"action({[values1[0]]}, {[values1[1]]}, {[values1[2]]}) is duplicate for action({[values2[0]]}, {[values2[1]]}, {[values2[2]]}")
    